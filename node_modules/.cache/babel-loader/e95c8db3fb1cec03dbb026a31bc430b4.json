{"ast":null,"code":"import _slicedToArray from\"/Users/theflyingpigeon/PycharmProjects/bestelwebsitereact/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import firebase from\"firebase\";export var useGetData=function useGetData(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),documents=_useState2[0],setDocuments=_useState2[1];var db=firebase.firestore();useEffect(function(){db.collection(\"values\").get().then(function(querySnapshot){var arr=[];querySnapshot.docs.map(function(doc){arr.push({id:doc.id,value:doc.data()});});setDocuments(arr);});},[db]);return[documents];};","map":{"version":3,"sources":["/Users/theflyingpigeon/PycharmProjects/bestelwebsitereact/src/components/Database Operations/useGetData.js"],"names":["React","useEffect","useState","firebase","useGetData","documents","setDocuments","db","firestore","collection","get","then","querySnapshot","arr","docs","map","doc","push","id","value","data"],"mappings":"gLAAA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CAEA,MAAO,IAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,EAAM,eACMF,QAAQ,CAAC,EAAD,CADd,wCACrBG,SADqB,eACVC,YADU,eAE5B,GAAMC,CAAAA,EAAE,CAAGJ,QAAQ,CAACK,SAAT,EAAX,CAEAP,SAAS,CAAC,UAAM,CACZM,EAAE,CAACE,UAAH,CAAc,QAAd,EACKC,GADL,GAEKC,IAFL,CAEU,SAACC,aAAD,CAAmB,CACrB,GAAIC,CAAAA,GAAG,CAAG,EAAV,CACAD,aAAa,CAACE,IAAd,CAAmBC,GAAnB,CAAuB,SAACC,GAAD,CAAS,CAC5BH,GAAG,CAACI,IAAJ,CAAS,CAACC,EAAE,CAAEF,GAAG,CAACE,EAAT,CAAaC,KAAK,CAAEH,GAAG,CAACI,IAAJ,EAApB,CAAT,EACH,CAFD,EAGAd,YAAY,CAACO,GAAD,CAAZ,CACH,CARL,EASH,CAVQ,CAUN,CAACN,EAAD,CAVM,CAAT,CAWA,MAAO,CAACF,SAAD,CAAP,CACH,CAhBM","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport firebase from \"firebase\";\n\nexport const useGetData = () => {\n    const [documents, setDocuments] = useState([]);\n    const db = firebase.firestore();\n\n    useEffect(() => {\n        db.collection(\"values\")\n            .get()\n            .then((querySnapshot) => {\n                let arr = [];\n                querySnapshot.docs.map((doc) => {\n                    arr.push({id: doc.id, value: doc.data()})\n                })\n                setDocuments(arr);\n            });\n    }, [db]);\n    return [documents];\n}"]},"metadata":{},"sourceType":"module"}