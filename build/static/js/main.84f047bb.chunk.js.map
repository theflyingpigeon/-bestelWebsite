{"version":3,"sources":["App.js","components/Producten.js","components/ProductenTest.js","components/Database Operations/useGetData.js","components/Bestellijst.js","reportWebVitals.js","index.js"],"names":["App","to","Producten","FireStoreData","useState","documents","setDocuments","db","firebase","firestore","useEffect","collection","get","then","querySnapshot","arr","docs","map","doc","push","id","value","data","useGetData","Bestelijst","bestellijst","setBestelijst","bestelAdvies","minimaal","huidig","className","onClick","Axios","response","val","MinimaleVooraad","ActueleVoorraad","Naam","Artikelnummer","toString","size","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","routing","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"+MAaeA,MAVf,WACI,OACI,+BACI,mCAAK,cAAC,IAAD,CAAMC,GAAG,IAAT,qBACL,mCAAK,cAAC,IAAD,CAAMA,GAAG,aAAT,0BACL,mCAAK,cAAC,IAAD,CAAMA,GAAG,eAAT,gC,iCCkNFC,I,QCpMAC,EAlBO,WAAO,IAAD,ECDF,WAAO,IAAD,EACMC,mBAAS,IADf,mBACrBC,EADqB,KACVC,EADU,KAEtBC,EAAKC,IAASC,YAapB,OAXAC,qBAAU,WACNH,EAAGI,WAAW,UACTC,MACAC,MAAK,SAACC,GACH,IAAIC,EAAM,GACVD,EAAcE,KAAKC,KAAI,SAACC,GACpBH,EAAII,KAAK,CAACC,GAAIF,EAAIE,GAAIC,MAAOH,EAAII,YAErChB,EAAaS,QAEtB,CAACR,IACG,CAACF,GDbYkB,GAAblB,EADiB,oBAGxB,OACI,gCACI,yCACCA,EAAUY,KAAI,SAACZ,GAGOA,EAAUe,GAAYf,EAAUgB,MAElChB,EAAUe,GAJjBf,EAAUe,U,iBE6CrBI,MApDf,WAAuB,IAAD,EACmBpB,mBAAS,IAD5B,mBACXqB,EADW,KACEC,EADF,KASZC,EAAe,SAACC,EAAUC,GAC5B,OAAID,EAAWC,EAAS,EACbD,EAAWC,EAEX,GAIf,OAGI,sBAAKC,UAAU,OAAf,UACI,wBAAQC,QAlBK,WACjBC,IAAMpB,IAAI,iCAAiCC,MAAK,SAACoB,GAC7CP,EAAcO,EAASX,UAgBvB,sCAEA,uBAAM,uBAAM,uBAEZ,kCACI,+BACI,sCACA,gDACA,uCACA,+CACA,yCAEHG,EAAYR,KAAI,SAACiB,GACd,GAAIP,EAAaO,EAAIC,gBAAiBD,EAAIE,iBAAmB,EACzD,OACI,+BACI,6BAAKF,EAAIG,OACT,6BAAKH,EAAII,gBACT,uCACA,6BAAKX,EAAaO,EAAIC,gBAAiBD,EAAIE,mBAC3C,6BAAI,cAAC,IAAD,CAAQf,MAAOa,EAAII,cAAcC,WAAYC,KAAM,oBCjCxEC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9B,MAAK,YAAkD,IAA/C+B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCWRO,EACF,cAAC,IAAD,UACI,gCACI,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWpD,IACjC,cAAC,IAAD,CAAOkD,KAAK,aAAaC,OAAK,EAACC,UAAWjD,IAC1C,cAAC,IAAD,CAAO+C,KAAK,eAAeC,OAAK,EAACC,UAAW5B,SAqHxD6B,IAASC,OACLL,EACAM,SAASC,eAAe,SAG5Bf,M","file":"static/js/main.84f047bb.chunk.js","sourcesContent":["import \"./App.css\";\nimport {Link} from 'react-router-dom'\n\nfunction App() {\n    return (\n        <ul>\n            <li> <Link to=\"/\">Home</Link></li>\n            <li> <Link to=\"/producten\">Producten</Link></li>\n            <li> <Link to=\"/bestellijst\">Bestellijst</Link></li>\n        </ul>\n    );\n}\n\nexport default App;","import React, {useState} from 'react';\nimport Axios from 'axios';\nimport \"../App.css\";\n\nfunction Producten() {\n    const [naam, setNaam] = useState(\"\")\n    const [artikkelNummer, setArtikkelNummer] = useState(0)\n    const [minimaleVoorraad, setMinimaleVoorraad] = useState(0)\n\n    const [bestelList, setBestelList] = useState([]);\n    const [newArtikkelNummer, setnewArtikkelNummer] = useState(0);\n    const [newVoorraad, setNewVoorraad] = useState(0);\n    const [newMinimaleVoorraad, setMinimaleNewVoorraad] = useState(0);\n\n    const getProducten = () => {\n        Axios.get('http://localhost:3001/moonen').then((response) => {\n            setBestelList(response.data);\n        })\n    };\n\n    const addItem = () => {\n        Axios.post(\"http://localhost:3001/create\", {\n            Naam: naam,\n            ArtikkelNummer: artikkelNummer,\n            MinimaleVoorraad: minimaleVoorraad\n        }).then(() => {\n            setBestelList([\n                ...bestelList,\n                {\n                    Naam: naam,\n                    ArtikkelNummer: artikkelNummer,\n                    MinimaleVoorraad: minimaleVoorraad,\n                    ActueleVoorraad: 0\n                },\n            ]);\n        });\n    };\n\n    const updateArtikkelNummer = (artikkelNummer) => {\n        Axios.put('http://localhost:3001/updateArtikkelNummer', {\n            artikkelnummer: newArtikkelNummer,\n            Number: artikkelNummer\n        }).then((response) => {\n            setBestelList(\n                bestelList.map((val) => {\n                    return val.Artikelnummer === artikkelNummer\n                        ? {\n                            Naam: val.Naam,\n                            Artikelnummer: newArtikkelNummer,\n                            MinimaleVooraad: val.MinimaleVooraad,\n                            ActueleVoorraad: val.ActueleVoorraad\n                        }\n                        : val;\n                })\n            );\n        });\n    };\n\n    const updateVoorraad = (artikkelNummer) => {\n        Axios.put('http://localhost:3001/updateVoorraad', {\n            voorraad: newVoorraad,\n            Number: artikkelNummer\n        }).then((response) => {\n            setBestelList(\n                bestelList.map((val) => {\n                    return val.Artikelnummer === artikkelNummer\n                        ? {\n                            Naam: val.Naam,\n                            Artikelnummer: val.Artikelnummer,\n                            MinimaleVooraad: val.MinimaleVooraad,\n                            ActueleVoorraad: newVoorraad\n                        }\n                        : val;\n                })\n            );\n        });\n    };\n\n    const updateMinimaleVoorraad = (artikkelNummer) => {\n        Axios.put('http://localhost:3001/updateMinimaleVoorraad', {\n            MinimaleVooraad: newMinimaleVoorraad,\n            Number: artikkelNummer\n        }).then((response) => {\n            setBestelList(\n                bestelList.map((val) => {\n                    return val.Artikelnummer === artikkelNummer\n                        ? {\n                            Naam: val.Naam,\n                            Artikelnummer: val.Artikelnummer,\n                            MinimaleVooraad: newMinimaleVoorraad,\n                            ActueleVoorraad: val.ActueleVoorraad\n                        }\n                        : val;\n                })\n            );\n        });\n    };\n\n    const bestelAdvies = (minimaal, huidig) => {\n        if (minimaal - huidig > 0) {\n            return minimaal - huidig\n        } else {\n            return 0\n        }\n    };\n\n    const deleteProduct = (artikkelNummer) => {\n        Axios.delete('http://localhost:3001/delete/{artikkelNummer}', {\n            ArtikkelNummer: artikkelNummer\n        }).then((response) => {\n            setBestelList(\n                bestelList.filter((val) => {\n                    return val.Artikelnummer !== artikkelNummer;\n                })\n            );\n        });\n    };\n\n\n    return (\n        <div className=\"layOut\">\n            <div className=\"Information\">\n\n                <div className=\"newProduct\">\n                    <label>Naam:</label>\n                    <input\n                        type=\"text\"\n                        onChange={(event) => {\n                            setNaam(event.target.value);\n                        }}\n                    />\n\n                    <label>Artikkelnummer:</label>\n                    <input\n                        type=\"number\"\n                        onChange={(event) => {\n                            setArtikkelNummer(event.target.value);\n                        }}\n                    />\n\n                    <label>Minimalevoorraad:</label>\n                    <input\n                        type=\"number\"\n                        onChange={(event) => {\n                            setMinimaleVoorraad(event.target.value);\n                        }}\n                    />\n\n                    <button onClick={addItem}>Voeg product toe</button>\n                </div>\n\n                <button onClick={getProducten}>Show producten</button>\n                {bestelList.map((val, key) => {\n                    return (\n                        <div className=\"product\">\n                            <div>\n                                <h3>Naam: {val.Naam}</h3>\n                                <h3>Artikkelnummer: {val.Artikelnummer}</h3>\n                                <h3>Minimale Voorraad: {val.MinimaleVooraad}</h3>\n                                <h3>Actuele Voorraad: {val.ActueleVoorraad}</h3>\n                                <h3>Bestel advies {bestelAdvies(val.MinimaleVooraad, val.ActueleVoorraad)}</h3>\n                            </div>\n\n                            <div className=\"ButtonStack\">\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Verander artikkelnummer\"\n                                    onChange={(event) => {\n                                        setnewArtikkelNummer(event.target.value);\n                                    }}\n                                />\n\n                                <button onClick={() => {\n                                    updateArtikkelNummer(val.Artikelnummer);\n                                }}>Update artikkelnummer\n                                </button>\n\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Verander Miniamale voorraad\"\n                                    onChange={(event) => {\n                                        setMinimaleNewVoorraad(event.target.value);\n                                    }}\n                                />\n\n                                <button onClick={() => {\n                                    updateMinimaleVoorraad(val.Artikelnummer);\n                                }}>Update minimalevoorraad\n                                </button>\n\n                                <input\n                                    type=\"text\"\n                                    placeholder=\"Actuele voorraad\"\n                                    onChange={(event) => {\n                                        setNewVoorraad(event.target.value);\n                                    }}\n                                />\n\n                                <button onClick={() => {\n                                    updateVoorraad(val.Artikelnummer);\n                                }}>Update voorraad\n                                </button>\n\n                                <button onClick={() => {\n                                    deleteProduct(val.Artikelnummer);\n                                }}\n                                >Verwijder product\n                                </button>\n                            </div>\n                        </div>\n                    );\n                })\n                }\n            </div>\n        </div>\n    )\n}\n\nexport default Producten","import React from 'react';\nimport {useGetData} from \"./Database Operations/useGetData\";\nimport Update from \"./Database Operations/Update\";\n\nconst FireStoreData = () => {\n    const [documents] = useGetData();\n\n    return (\n        <div>\n            <span>Value</span>\n            {documents.map((documents) => {\n                <div key={documents.id}>\n                    <div>\n                        Document: {documents.id} Value: {documents.value}\n                    </div>\n                    <Update doc={documents.id} />\n                </div>\n            })}\n        </div>\n    );\n};\n\nexport default FireStoreData\n\n\n","import React, {useEffect, useState} from 'react';\nimport firebase from \"firebase\";\n\nexport const useGetData = () => {\n    const [documents, setDocuments] = useState([]);\n    const db = firebase.firestore();\n\n    useEffect(() => {\n        db.collection(\"values\")\n            .get()\n            .then((querySnapshot) => {\n                let arr = [];\n                querySnapshot.docs.map((doc) => {\n                    arr.push({id: doc.id, value: doc.data()})\n                })\n                setDocuments(arr);\n            });\n    }, [db]);\n    return [documents];\n}","import React, {useState} from \"react\";\nimport Axios from \"axios\";\nimport QRCode from 'react-qr-code'\n\nfunction Bestelijst() {\n    const [bestellijst, setBestelijst] = useState([])\n\n    const getProducten = () => {\n        Axios.get('http://localhost:3001/getData').then((response) => {\n            setBestelijst(response.data);\n        })\n    };\n\n    const bestelAdvies = (minimaal, huidig) => {\n        if (minimaal - huidig > 0) {\n            return minimaal - huidig;\n        } else {\n            return 0;\n        }\n    };\n\n    return (\n\n\n        <div className=\"test\">\n            <button onClick={getProducten}>laat de bestellijst zien</button>\n\n            <br /><br /><br />\n\n            <table>\n                <tr>\n                    <th>Naam</th>\n                    <th>ArtikkelNummer</th>\n                    <th>     </th>\n                    <th>Bestel advies</th>\n                    <th>Code</th>\n                </tr>\n                {bestellijst.map((val) => {\n                    if (bestelAdvies(val.MinimaleVooraad, val.ActueleVoorraad) > 0) {\n                        return (\n                            <tr>\n                                <td>{val.Naam}</td>\n                                <td>{val.Artikelnummer}</td>\n                                <td>     </td>\n                                <td>{bestelAdvies(val.MinimaleVooraad, val.ActueleVoorraad)}</td>\n                                <td><QRCode value={val.Artikelnummer.toString()} size={80} /></td>\n                            </tr>\n                        )\n                    }\n                })}\n            </table>\n        </div>\n\n    )\n}\n\nexport default Bestelijst","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport App from './App';\nimport Producten from './components/Producten'\nimport FireStoreData from \"./components/ProductenTest\";\nimport TestClass from './components/ProductenTest'\nimport Bestelijst from './components/Bestellijst'\nimport reportWebVitals from './reportWebVitals';\n\n// const express = require(\"express\");\n// const app = express();\n// const mysql = require(\"mysql\");\n// const cors = require(\"cors\");\n//\n// app.use(cors());\n// app.use(express.json());\n//\nconst routing = (\n    <Router>\n        <div>\n            <Route path=\"/\" exact component={App}/>\n            <Route path=\"/producten\" exact component={FireStoreData}/>\n            <Route path=\"/bestellijst\" exact component={Bestelijst}/>\n        </div>\n    </Router>\n)\n//\n// const db = mysql.createConnection({\n//     user: 'sql11398825',\n//     host: 'sql11.freemysqlhosting.net',\n//     password: 'QDRHLwuDZE',\n//     database: 'sql11398825'\n// });\n//\n// app.post(\"/create\", (req, res) => {\n//     const naam = req.body.Naam;\n//     const artikkelNummer = req.body.ArtikkelNummer;\n//     const minimaleVoorraad = req.body.MinimaleVoorraad;\n//\n//     db.query(\n//         \"INSERT INTO Bestellingen (Naam, Artikelnummer, MinimaleVooraad, ActueleVoorraad) VALUES (?,?,?,?)\",\n//         [naam, artikkelNummer, minimaleVoorraad, 0],\n//         (err, result) => {\n//             if (err) {\n//                 console.log(err);\n//             } else {\n//                 res.send(\"Values Inserted\");\n//             }\n//         }\n//     );\n// });\n//\n// app.get(\"/moonen\", (req, res) => {\n//     db.query(\"SELECT * FROM Bestellingen\", (err, result) => {\n//         if (err) {\n//             console.log(err);\n//         } else {\n//             res.send(result);\n//         }\n//     });\n// });\n//\n// app.get(\"/getData\", (req, res) => {\n//     db.query(\"SELECT * FROM Bestellingen\", (err, result) => {\n//         if (err) {\n//             console.log(err);\n//         } else {\n//             res.send(result);\n//         }\n//     });\n// });\n//\n// app.put(\"/updateArtikkelNummer\", (req, res) => {\n//     const an = req.body.artikkelnummer;\n//     const artikkelNummer = req.body.Number;\n//\n//     db.query(\n//         \"UPDATE Bestellingen SET Artikelnummer = ? WHERE Artikelnummer = ?\",\n//         [an, artikkelNummer],\n//         (err, result) => {\n//             if (err) {\n//                 console.log(err);\n//             } else {\n//                 res.send(result);\n//             }\n//         }\n//     );\n// });\n//\n// app.put(\"/updateMinimaleVoorraad\", (req, res) => {\n//     const voorraad = req.body.MinimaleVooraad;\n//     const artikkelNummer = req.body.Number;\n//\n//     db.query(\n//         \"UPDATE Bestellingen SET MinimaleVooraad = ? WHERE Artikelnummer = ?\",\n//         [voorraad, artikkelNummer],\n//         (err, result) => {\n//             if (err) {\n//                 console.log(err);\n//             } else {\n//                 res.send(result);\n//             }\n//         }\n//     );\n// });\n//\n// app.put(\"/updateVoorraad\", (req, res) => {\n//     const voorraad = req.body.voorraad;\n//     const artikkelNummer = req.body.Number;\n//\n//     db.query(\n//         \"UPDATE Bestellingen SET ActueleVoorraad = ? WHERE Artikelnummer = ?\",\n//         [voorraad, artikkelNummer],\n//         (err, result) => {\n//             if (err) {\n//                 console.log(err);\n//             } else {\n//                 res.send(result);\n//             }\n//         }\n//     );\n// });\n//\n// app.delete(\"/delete/:ArtikkelNummer\", (req, res) => {\n//     const ArtikkelNummer = req.body.Artikelnummer;\n//     db.query(\"DELETE FROM Bestellingen WHERE Artikelnummer = ?\", [ArtikkelNummer], (err, result) => {\n//         if (err) {\n//             console.log(err);\n//         } else {\n//             res.send(result);\n//         }\n//     });\n//     db.close();\n// });\n//\n// // app.listen(3001, () => {\n// //   console.log(\"Yey, your server is running on port 3001\");\n// // });\n//\nReactDOM.render(\n    routing,\n    document.getElementById('root')\n);\n\nreportWebVitals();"],"sourceRoot":""}